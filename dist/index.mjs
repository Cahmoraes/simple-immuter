var B=(()=>{let c=new Map([[1,"This object has been frozen and should not be mutated"],[2,"baseState and producer are incompatibles"],[3,"Cannot merge these types, because they are different types"]]),o=e=>()=>console.log(c.get(e)),i=(...e)=>n=>e.reduce((t,r)=>r(t),n),T=(e,n=1/0)=>s(e)!=="array"?e:n>0?e.reduce((t,r)=>t.concat(T(r,--n)),[]):e,u=e=>Object.fromEntries(e),p=e=>Reflect.ownKeys(e),P=e=>(e.add=o(1),e.delete=o(1),e.clear=o(1),e),g=e=>(e.set=o(1),e.delete=o(1),e.clear=o(1),e),f=e=>n=>Object.setPrototypeOf(n,e),S=e=>Object.getPrototypeOf(e),s=e=>{let n=Reflect.apply(Object.prototype.toString,e,[]);return n.substring(n.indexOf(" ")+1,n.indexOf("]")).toLowerCase()},h=e=>s(e)==="array",A=e=>s(e)==="object",d=e=>s(e)==="function",x=e=>s(e)==="promise",b=e=>s(e)==="undefined",k=e=>e.every(h),E=e=>e.every(A),j=e=>(...n)=>n.every(t=>s(t)===e),w=j("object"),O=j("array"),l=e=>Object.freeze(e),M=(e,n,t)=>{if(w(e,n)&&E(t))return a(Object.assign(e,n,...t));if(O(e,n)&&k(t))return a([...e,...n,...T(t,1)]);throw new Error(c.get(3))},a=e=>{switch(s(e)){case"object":return i(u,f(S(e)),l)(p(e).map(n=>[n,a(e[n])]));case"array":return l(e.map(a));case"set":return P(e);case"map":{let n=new Map;return e.forEach((t,r)=>{n.set(r,a(t))}),g(n)}default:return e}},C=async(e,n)=>{try{let t=await e;if(b(n))return a(t);if(d(n))return n(t),a(t)}catch(t){return new Error(t)}},K=(e,n,...t)=>{if(x(e))return C(e,n);let r=y(e);if(b(n))return a(r);if(d(n))return n(r),a(r);if(t.length>0)return M(r,n,t);if(w(r,n))return a(Object.assign(r,n));if(O(r,n)&&Array.isArray(n)&&Array.isArray(r))return a([...r,...n]);throw new Error(c.get(3))},v=e=>e.map(y),R=e=>{let n=Object.getPrototypeOf(e);return i(u,f(n))(p(e).map(t=>[t,y(e[t])]))},D=e=>{let n=new Map;return e.forEach((t,r)=>{n.set(r,y(t))}),n},V=e=>{let n=new Set;return e.forEach(t=>n.add(y(t))),n},y=e=>{switch(s(e)){case"object":return R(e);case"array":return v(e);case"map":return D(e);case"set":return V(e);default:return e}};return{produce:K,deepClone:y,deepFreeze:a}})();export{B as si};
//# sourceMappingURL=index.mjs.map